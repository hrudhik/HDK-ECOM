<%- include("../partials/admin/header.ejs") %>

<style>
  /* General Styles */
  body {
    font-family: 'Arial', sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f5f7;
    color: #333;
  }

  h1 {
    text-align: center;
    margin-top: 20px;
    font-size: 2.5rem;
    color: #2c3e50;
  }

  .filters {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    margin: 20px auto;
    flex-wrap: wrap;
  }

  .filters select,
  .filters input,
  .filters button {
    padding: 10px 15px;
    font-size: 1rem;
    border: 1px solid #ccc;
    border-radius: 5px;
    outline: none;
  }

  .filters button {
    background-color: #3498db;
    color: white;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .filters button:hover {
    background-color: #1d78c2;
  }

  table {
    width: 90%;
    margin: 20px auto;
    border-collapse: collapse;
    background-color: white;
    box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);
  }

  table thead {
    background-color: #3498db;
    color: white;
  }

  table thead th {
    padding: 12px;
    text-align: left;
  }

  table tbody tr {
    border-bottom: 1px solid #ddd;
  }

  table tbody tr:nth-child(even) {
    background-color: #f9f9f9;
  }

  table tbody td {
    padding: 12px;
  }

  .download-buttons {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin: 20px 0;
  }

  .download-buttons button {
    padding: 10px 20px;
    font-size: 1rem;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  #downloadPdf {
    background-color: #e74c3c;
    color: white;
  }

  #downloadPdf:hover {
    background-color: #c0392b;
  }

  #downloadExcel {
    background-color: #27ae60;
    color: white;
  }

  #downloadExcel:hover {
    background-color: #1e8449;
  }
</style>

<h1>Sales Report</h1>

<div class="filters">
  <select id="filter">
    <option value="today">Today</option>
    <option value="weekly">Weekly</option>
    <option value="monthly">Monthly</option>
    <option value="yearly">Yearly</option>
    <option value="specific">Specific Date</option>
  </select>
  <input type="date" id="startDate" style="display:none;">
  <input type="date" id="endDate" style="display:none;">
  <button id="generateReport">Generate Report</button>
</div>

<table id="salesTable" class="table">
  <thead>
    <tr>
      <th>Order ID</th>
      <th>User</th>
      <th>Total Amount</th>
      <th>Status</th>
    </tr>
  </thead>
  <tbody>
    <!-- Data will be populated dynamically -->
  </tbody>
</table>

<div class="download-buttons">
  <button id="downloadPdf">Download PDF</button>
  <button id="downloadExcel">Download Excel</button>
</div>

<%- include("../partials/admin/footer.ejs") %>

<script>
  const filter = document.getElementById("filter");
  const startDate = document.getElementById("startDate");
  const endDate = document.getElementById("endDate");

  filter.addEventListener("change", () => {
    if (filter.value === "specific") {
      startDate.style.display = "inline";
      endDate.style.display = "inline";
    } else {
      startDate.style.display = "none";
      endDate.style.display = "none";
    }
  });

  document.getElementById("generateReport").addEventListener("click", async () => {
    const selectedFilter = filter.value;
    const start = startDate.value;
    const end = endDate.value;

    const response = await fetch(`/admin/sales-report?filter=${selectedFilter}&startDate=${start}&endDate=${end}`);
    const data = await response.json();

    const tableBody = document.getElementById("salesTable").querySelector("tbody");
    tableBody.innerHTML = ""; // Clear previous data

    data.salesData.forEach((order) => {
      const row = `
        <tr>
          <td>${order._id}</td>
          <td>${order.userId.name}</td>
          <td>${order.totalAmount}</td>
          <td>${order.status}</td>
        </tr>
      `;
      tableBody.innerHTML += row;
    });
  });
  document.getElementById('downloadPdf').addEventListener('click', async () => {
  const tableData = getSalesDataFromTable(); // Function to extract data from the table
  const response = await fetch('/admin/sales-report/pdf', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ salesData: tableData }),
  });

  // Convert response to a downloadable file
  const blob = await response.blob();
  const link = document.createElement('a');
  link.href = window.URL.createObjectURL(blob);
  link.download = 'sales_report.pdf';
  link.click();
});

document.getElementById('downloadExcel').addEventListener('click', async () => {
  const tableData = getSalesDataFromTable(); // Function to extract data from the table
  const response = await fetch('/admin/sales-report/excel', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ salesData: tableData }),
  });

  // Convert response to a downloadable file
  const blob = await response.blob();
  const link = document.createElement('a');
  link.href = window.URL.createObjectURL(blob);
  link.download = 'sales_report.xlsx';
  link.click();
});


function getSalesDataFromTable() {
  const tableRows = document.querySelectorAll('#salesTable tbody tr');
  const salesData = [];

  tableRows.forEach((row) => {
    const cells = row.querySelectorAll('td');
    salesData.push({
      _id: cells[0].innerText,
      userId: { name: cells[1].innerText },
      totalAmount: cells[2].innerText,
      status: cells[3].innerText,
    });
  });

  return salesData;
}

</script>
