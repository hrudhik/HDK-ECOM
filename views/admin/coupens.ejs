<%- include("../partials/admin/header.ejs") %>
    <style>
        /* General Styles */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f9;
            color: #333;
        }

        h1 {
            text-align: center;
            color: #004cff;
            margin: 20px 0;
        }

        h3 {
            color: #333;
        }

        /* Form Styles */
        form {
            background-color: #fff;
            padding: 20px;
            margin: 20px auto;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            max-width: 500px;
        }

        form label {
            display: block;
            margin: 10px 0 5px;
            font-weight: bold;
        }

        form input {
            width: calc(100% - 20px);
            padding: 8px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        form button {
            background-color: #004cff;
            color: white;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
            border-radius: 4px;
            font-size: 16px;
        }

        form button:hover {
            background-color: #0037ff;
        }

        /* Table Styles */
        table {
            width: 90%;
            margin: 20px auto;
            border-collapse: collapse;
            background-color: #fff;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        table th, table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        table th {
            background-color: #004cff;
            color: white;
        }

        table tr:hover {
            background-color: #f1f1f1;
        }

        table td form button {
            background-color: #e74c3c;
            color: white;
            padding: 6px 10px;
            font-size: 14px;
        }

        table td form button:hover {
            background-color: #c0392b;
        }

        /* Responsive Styles */
        @media (max-width: 768px) {
            form {
                width: 90%;
            }

            table {
                width: 100%;
                font-size: 14px;
            }

            table th, table td {
                padding: 8px;
            }
        }
    </style>



    <!-- Form to create a new coupon -->
    <h1>Coupons Management</h1>

    <!-- Form to create a new coupon -->
    <form id="couponform" action="/admin/coupons/create" method="POST">
        <h3>Create New Coupon</h3>
        <label for="code">Coupon Code:</label>
        <input type="text" name="code" required />
    
        <label for="discountPercentage">Discount Percentage:</label>
        <input type="number" name="discountPercentage" required />
    
        <label for="minPurchaseAmount">Minimum Purchase Amount:</label>
        <input type="number" name="minPurchaseAmount" required />
    
        <label for="endDate">End Date:</label>
        <input type="date" name="endDate" required />
    
        <button type="submit">Create Coupon</button>
    </form>
    
    <hr />
    


    <!-- List of all coupons -->
    <h3 style="text-align: center;">All Coupons</h3>
    <table border="1">
        <thead>
            <tr>
                <th>Code</th>
                <th>Discount (%)</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <% coupons.forEach(coupon => { %>
            <tr>
                <td><%= coupon.code %></td>
                <td><%= coupon.discountPercentage %>%</td>
                <td><%= coupon.startDate.toDateString() %></td>
                <td><%= coupon.endDate.toDateString() %></td>
                <td>
                    <button onclick="confirmDelete('<%= coupon._id %>')" class="delete-btn">Delete</button>
                </td>
            </tr>
            <% }) %>
        </tbody>
    </table>
<!-- Include SweetAlert2 Library -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>
    document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("couponform"); // âœ… Corrected Selector
    const discountInput = document.querySelector("input[name='discountPercentage']");
    const endDateInput = document.querySelector("input[name='endDate']");
    const minPurchaseInput = document.querySelector("input[name='minPurchaseAmount']");

    const today = new Date().toISOString().split("T")[0];
    endDateInput.setAttribute("min", today); // Prevent past dates

    form.addEventListener("submit", async function (event) {
        event.preventDefault(); // Prevent default form submission
        let isValid = true;
        let errorMessage = "";

        // Validate Discount Percentage (1-99)
        const discountValue = parseInt(discountInput.value);
        if (discountValue <= 0 || discountValue >= 100) {
            errorMessage += "Discount percentage must be between 1 and 99.<br>";
            isValid = false;
        }

        // Validate Minimum Purchase Amount (Must be > 0)
        const minPurchaseValue = parseFloat(minPurchaseInput.value);
        if (minPurchaseValue <= 0) {
            errorMessage += "Minimum purchase amount must be greater than 0.<br>";
            isValid = false;
        }

        // Validate End Date (Must be in the future)
        const selectedDate = new Date(endDateInput.value);
        const currentDate = new Date(today);
        if (selectedDate <= currentDate) {
            errorMessage += "End date must be a future date.<br>";
            isValid = false;
        }

        // If validation fails, show error popup
        if (!isValid) {
            Swal.fire({
                icon: "error",
                title: "Validation Error",
                html: errorMessage, // Use HTML to display multiple errors
            });
            return;
        }

        // Send form data to backend via Fetch API
        const formData = new URLSearchParams(new FormData(form));

        try {
            const response = await fetch("/admin/coupons/create", {
                method: "POST",
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded",
                },
                body: formData,
            });

            const data = await response.json();

            if (response.ok && data.success) {
                Swal.fire({
                    icon: "success",
                    title: "Coupon Created!",
                    text: data.message,
                    confirmButtonText: "OK",
                }).then(() => {
                    window.location.reload(); // Refresh page after success
                });
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Failed to Create Coupon",
                    text: data.message || "An error occurred while creating the coupon.",
                });
            }
        } catch (error) {
            console.error("Error:", error);
            Swal.fire({
                icon: "error",
                title: "Server Error",
                text: "Something went wrong. Please try again later.",
            });
        }
    });
});


    function confirmDelete(couponId) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to recover this coupon!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Yes, delete it!",
        }).then((result) => {
            if (result.isConfirmed) {
                // Perform the delete action
                fetch(`/admin/deleteCoupons/${couponId}`, {
                    method: "POST",
                })
                .then((response) => {
                    if (response.ok) {
                        Swal.fire({
                            icon: "success",
                            title: "Deleted!",
                            text: "The coupon has been deleted.",
                        }).then(() => {
                            window.location.reload(); // Reload the page after deletion
                        });
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: "Failed to delete the coupon.",
                        });
                    }
                })
                .catch((error) => {
                    console.error("Delete Error:", error);
                    Swal.fire({
                        icon: "error",
                        title: "Server Error",
                        text: "Something went wrong. Please try again later.",
                    });
                });
            }
        });
    }
</script>

    

    <%- include("../partials/admin/footer.ejs") %>