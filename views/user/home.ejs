<%- include("../partials/user/header.ejs") %>
<main class="main">
    <section class="section-padding">
        <div class="container wow fadeIn animated">
            <h3 class="section-title mb-20"><span>New</span> Arrivals</h3>
            <div class="carausel-6-columns-cover position-relative">
                <div class="slider-arrow slider-arrow-2 carausel-6-columns-arrow" id="carausel-6-columns-2-arrows"></div>
                <div class="carausel-6-columns carausel-arrow-center" id="carausel-6-columns-2">
                    <% for (let i = 0; i <4; i++) {   %>
                        <div class="product-cart-wrap small hover-up">
                            <div class="product-img-action-wrap">
                                <div class="product-img product-img-zoom">
                                    <a href="/productDetails?id=<%= products[i]?._id %>">
                                        <img class="default-img" src="/uploads/re-image/<%= products[i]?.productImage[0] %>" alt="<%= products[i]?.productName %>">
                                        <img class="hover-img" src="/uploads/re-image/<%= products[i]?.productImage[1] || products[i]?.productImage[0] %>" alt="<%= products[i]?.productName %>">
                                    </a>
                                </div>
                            </div>
                            <div class="product-content-wrap">
                                <h2><a href="/productDetails?id=<%= products[i]?._id %>"><%= products[i]?.productName %></a></h2>
                                <div class="rating-result">
                                    <span></span>
                                </div>
                                <div class="product-price">
                                    <span>₹<%= products[i]?.salePrice %></span>
                                </div>
                            </div>
                        </div>
                    <%  } %> <!-- End of for loop -->
                </div>
            </div>
        </div>
        <div class="row product-grid-4">
            <% for (let i = 0; i < products.length; i++) { 
                if (products[i]) { %>
                <div class="col-lg-3 col-md-4 col-12 col-sm-6">
                    <div class="product-cart-wrap mb-30">
                        <div class="product-img-action-wrap">
                            <div class="product-img product-img-zoom">
                                <a href="/productDetails?id=<%= products[i]._id %>">
                                    <img class="default-img" src="/uploads/re-image/<%= products[i].productImage[0] %>" alt="<%= products[i].productName %>">
                                </a>
                            </div>
                            <div class="product-action-1">
                                <a aria-label="Quick view" class="action-btn hover-up" href="#/productDetails?id=<%= products[i]._id %>" data-bs-toggle="modal">
                                    <i class="fi-rs-eye"></i>
                                </a>
                                <a aria-label="Add To Wishlist" class="action-btn hover-up" onclick="addToWishlist('<%= products[i]._id %>')">
                                    <i class="fi-rs-heart"></i>
                                </a>
                                <a aria-label="Compare" class="action-btn hover-up" href="#">
                                    <i class="fi-rs-shuffle"></i>
                                </a>
                            </div>
                        </div>
                        <div class="product-content-wrap">
                            <div class="product-category">
                                <a href="shop-grid-right.html"><%= products[i].brand %></a>
                            </div>
                            <h2><a href="shop-product-right.html"><%= products[i].productName %></a></h2>
                            <div class="rating-result" title="90%">
                                <span><span>90%</span></span>
                            </div>
                            <div class="product-price">
                                <span>₹<%= products[i].salePrice %></span>
                                <span class="old-price">₹<%= products[i].regularPrice %></span>
                            </div>
                            <div class="product-action-1 show">
                                <a aria-label="Add To Cart" class="action-btn hover-up" href="addTocart">
                                    <i class="fi-rs-shopping-bag-add"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            <% } } %> <!-- End of for loop -->
        </div>
    </section>
    <div class="container d-flex justify-content-center">
        <div class="mb">
            <a href="/shop"><button type="button" class="btn btn-secondary btn-sm">Show More</button></a>
        </div>
    </div>
<%- include("../partials/user/footer.ejs") %>
</main>
  
    <script>
        async function wishlist(wish, event, productId) {
            event.preventDefault();
            const icon = wish.querySelector('i');
            const change = icon.classList.contains('bi-heart') ? 'add' : 'remove';
            const method = change === 'add' ? 'POST' : 'DELETE';
            
            icon.classList.add(change === 'add' ? 'heart-beat' : 'fade-out');
            
            try {
                const response = await fetch(`/wishlist/${change}`, {
                    method: method,
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productId })
                });
                
                const data = await response.json();
                if (!data.success) throw new Error(data.message || 'Response error');
        
                if (change === 'add') {
                    icon.classList.remove('bi-heart');
                    icon.classList.add('bi-heart-fill');
                } else {
                    icon.classList.remove('bi-heart-fill');
                    icon.classList.add('bi-heart');
                }
        
            } catch (err) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: err || 'Error processing wishlist',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    customClass: {
                        popup: 'colored-toast'
                    }
                });
            } finally {
                setTimeout(() => {
                    icon.classList.remove('heart-beat', 'fade-out');
                }, 600);
            }
        }

        
        async function addtoCart(productId) {
            try {
                event.preventDefault();
                const response = await fetch('/update-cart', {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productId })
                });
        
                const data = await response.json();
                if (!data.success && data.itemExist) {
                    return window.location.href = '/cart';
                }
                if (!data.success) throw new Error(data.message || 'Response error');
        
                if (data.success) {

                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'success',
                        title: data.message || 'Item added to cart',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        customClass: {
                            popup: 'colored-toast'
                        }
                    });
                }
                
            } catch (err) {
                console.log(err);
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'success',
                    title: err || 'Error processing wishlist',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    customClass: {
                        popup: 'colored-toast'
                    }
                });
            }
        }
        
       
async function addToWishlist(productId) {
    try {
        const response = await fetch('/addTowishlist', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId }),
        });

        const data = await response.json();
        Swal.fire({
                toast: true,
                position: 'top-end',
                icon: data.success ? 'success' : 'error',
                title: data.message || (data.success ? 'Added to wishlist' : 'Failed to add to wishlist'),
                showConfirmButton: false,
                timer: 3000,
            });
    } catch (error) {
        console.error("Error adding to wishlist:", error);
    }
}

    </script>

